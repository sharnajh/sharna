import React, { Component } from "react";
import anime from "animejs/lib/anime.es.js";
import { connect } from "react-redux";
import { setLoaded } from "../../actions/loaded";

class Logo extends Component {
  movingBlobs = () => {
    anime({
      targets: "#whiteStrokeBlob",
      d: [
        {
          value:
            "M355.321,114c18.27,103.1774,95.3143,261.0517-41,267-157.2085,6.86-226.0878,58.3474-250-33C21.0543,182.7159,8.6,226.1619,93.321,90,173.96-39.6008,338.4088,18.4919,355.321,114Z"
        }
      ],
      duration: 1500,
      easing: "linear",
      loop: true,
      direction: "alternate"
    });
    anime({
      targets: "#blueblob",
      d: [
        {
          value:
            "M385.321,165c10.178,43.5445-5.42,270.9523-119,236-23.5424-7.2448-182.4293-12.7223-231-106-39.8718-76.5719-31.3322-163.7059,106-242C335.4167-57.6554,360.9722,60.8287,385.321,165Z"
        }
      ],
      duration: 2000,
      easing: "linear",
      loop: true,
      direction: "alternate"
    });
  };
  initAnimation = () => {
    const { dispatch } = this.props;
    let tl = anime.timeline({
      loop: false,
      changeComplete: function() {
        dispatch(setLoaded());
      }
    });
    tl.add({
      targets: ".seg",
      strokeDashoffset: [anime.setDashoffset, 0],
      easing: "easeOutQuad",
      duration: 2500,
      delay: (el, i) => 50 * i
    })
      .add(
        {
          targets: ["#pink"],
          fill: "#FF1A82",
          stroke: "#FF1A82",
          easing: "linear",
          duration: 1000
        },
        2000
      )
      .add(
        {
          targets: ["#blue"],
          fill: "#00B7FF",
          stroke: "#FF1A82",
          easing: "linear",
          duration: 1000
        },
        2000
      );
  };
  componentDidMount() {
    console.log(this.props);
    this.movingBlobs();
    this.initAnimation();
  }
  render() {
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="100%"
        height="100%"
        viewBox="0 0 401.1158 417.7886"
        id="logo"
      >
        <defs>
          <linearGradient
            id="linear-gradient"
            x1="2.6309"
            y1="208.9732"
            x2="396.8033"
            y2="208.9732"
            gradientUnits="userSpaceOnUse"
          >
            <stop offset="0" stopColor="#5e00bf" />
            <stop offset="1" stopColor="#3fdcff" stopOpacity="0.4" />
          </linearGradient>
        </defs>
        <g id="White_Stroke_Blob" data-name="White Stroke Blob">
          <path
            id="whiteStrokeBlob"
            d="M374.321,114c18.27,103.1774,73.3143,272.0517-63,278-157.2085,6.86-223.0878,47.3474-247-44C21.0543,182.7159-5.4,219.1619,79.321,83,159.96-46.6008,357.4088,18.4919,374.321,114Z"
            transform="translate(-2.6309 -0.079)"
            fill="none"
            stroke="#fff"
            strokeMiterlimit="10"
            strokeWidth="2px"
          />
        </g>
        <g id="Blue_Gradient_Blob" data-name="Blue Gradient Blob">
          <path
            id="blueblob"
            d="M394.1084,159.7417c10.178,43.5444-4.2323,289.6919-117.8123,254.74-23.5423-7.2447-206.9844-22.755-255.5551-116.0327-39.8718-76.572-19.52-176.4456,117.8123-254.74C332.649-66.9465,369.76,55.57,394.1084,159.7417Z"
            transform="translate(-2.6309 -0.079)"
            fill="url(#linear-gradient)"
          />
        </g>
        <g id="Letter">
          <path
            className="seg"
            id="blue"
            d="M307.171,297.83q-3.975,42.735-31.57,63.15a67.6213,67.6213,0,0,1-18.07,9.78l-28.52,10.15c.4-.15.81-.31,1.21-.47.79-.3,1.57-.63,2.34-.98q.78-.33,1.53-.69c.42-.19.85-.4,1.27-.61,1.86-.92,3.69-1.93,5.47-3.04.32-.19.64-.39.96-.59.7-.45,1.4-.92,2.09-1.4.39-.27.78-.55,1.17-.83s.78-.56,1.16-.85q27.6-20.43,31.57-63.15,3.045-32.895-8.02-56.31-10.875-23.145-46.5-57.07-11.97-11.61-19.79-20.71a111.6392,111.6392,0,0,1-11.69-15.7,50.9788,50.9788,0,0,1-6.16-30.09q1.89-20.295,15.89-30.68c.4-.3.81-.59,1.22-.86.41-.28.82-.55,1.24-.81.74-.47,1.5-.91,2.27-1.31.2-.11.4-.21.6-.31.27-.14.54-.27.81-.4.12-.06.24-.12.36-.17.33-.16.66-.3,1-.44a1.0887,1.0887,0,0,1,.25-.1c.3-.13.6-.26.91-.36a3.5861,3.5861,0,0,1,.51-.2,37.712,37.712,0,0,1,16.17-2.05q-10.26,10.08-11.84,27.22a50.9788,50.9788,0,0,0,6.16,30.09,112.2516,112.2516,0,0,0,11.68,15.7q7.83,9.09,19.8,20.71,35.61,33.93,46.5,57.07Q310.221,264.935,307.171,297.83Z"
            transform="translate(-2.6309 -0.079)"
            fill="none"
            stroke="#fff"
            strokeMiterlimit="10"
          />
          <path
            className="seg"
            id="blue"
            d="M221.741,327.25a33.1808,33.1808,0,0,1-4.2,3.66,34.1409,34.1409,0,0,1-8.72,4.64c-.02.01-.05.01-.07.02-.52.19-1.05.36-1.58.52s-1.07.31-1.62.45c-.5.13-1,.25-1.51.36-.13.02-.26.05-.4.08-.45.09-.9.17-1.36.25-.05.01-.11.01-.17.02-.54.09-1.09.17-1.65.23-.5.07-1.01.12-1.52.15-.14.02-.28.03-.42.04-.51.04-1.02.07-1.54.08a.4869.4869,0,0,1-.12.01c-.6.03-1.2.04-1.81.04a63.6985,63.6985,0,0,1-14.88-1.92q-20.775-5.01-32.79-18.16-12.015-13.17-23.07-43.13l29.39-10.47q11.04,29.955,23.07,43.13,12.03,13.155,32.79,18.16A65.6011,65.6011,0,0,0,221.741,327.25Z"
            transform="translate(-2.6309 -0.079)"
            fill="none"
            stroke="#fff"
            strokeMiterlimit="10"
          />
          <path
            className="seg"
            id="pink"
            d="M185.621,128.42a50.9788,50.9788,0,0,0,6.16,30.09,111.6392,111.6392,0,0,0,11.69,15.7q7.815,9.09,19.79,20.71,35.61,33.93,46.5,57.07,11.07,23.415,8.02,56.31-3.975,42.735-31.57,63.15c-.38.29-.77.57-1.16.85s-.78.56-1.17.83c-.69.48-1.39.95-2.09,1.4-.32.2-.64.4-.96.59-1.78,1.11-3.61,2.12-5.47,3.04-.42.21-.85.42-1.27.61q-.75.36-1.53.69c-.77.35-1.55.67-2.34.98-.4.16-.81.32-1.21.47a.4179.4179,0,0,0-.1.04l-.18.06q-21.885,8.025-50.33,1.17-32.76-7.89-53.97-29.16a122.807,122.807,0,0,1-19.43-25.76,228.2147,228.2147,0,0,1-16.18-35.46l35.49-17.21q11.04,29.955,23.07,43.13,12.03,13.155,32.79,18.16a63.6985,63.6985,0,0,0,14.88,1.92c.61,0,1.21-.01,1.81-.04a.4869.4869,0,0,0,.12-.01c.52-.01,1.03-.04,1.54-.08.14-.01.28-.02.42-.04.51-.03,1.02-.08,1.52-.15.56-.06,1.11-.14,1.65-.23.06-.01.12-.01.17-.02.46-.08.91-.16,1.36-.25.14-.03.27-.06.4-.08.51-.11,1.01-.23,1.51-.36.55-.14,1.09-.28,1.62-.45.53-.16,1.06-.33,1.58-.52.02-.01.05-.01.07-.02a34.1409,34.1409,0,0,0,8.72-4.64,33.1808,33.1808,0,0,0,4.2-3.66q10.485-10.815,12.47-32.07a51.2555,51.2555,0,0,0-6.82-31.56,111.7638,111.7638,0,0,0-12.9-17.3q-8.7-9.975-22.29-23.07-31.11-29.985-42.42-53.02-10.71-22.905-7.94-52.8,3.705-39.945,30.91-60.25a70.2034,70.2034,0,0,1,18.78-10.2c.01,0,.02-.01.03-.01.76-.27,1.52-.53,2.29-.76.57-.19,1.15-.36,1.73-.53.45-.13.91-.25,1.36-.37.46-.13.92-.24,1.38-.35.4-.1.8-.19,1.21-.28.52-.12,1.03-.23,1.56-.33.37-.08.74-.15,1.12-.22.15-.02.31-.05.46-.08.41-.07.82-.14,1.23-.2.36-.06.71-.11,1.07-.16.41-.06.82-.11,1.23-.16.31-.04.62-.08.94-.11.35-.04.7-.08,1.05-.11,1.13-.11,2.28-.19,3.43-.25.31-.02.63-.03.95-.04.19-.01.38-.02.58-.02.79-.03,1.58-.04,2.37-.04a94.7455,94.7455,0,0,1,22.19,2.79,101.8089,101.8089,0,0,1,28.65,11.8c.41.25.82.51,1.22.77.49.32.98.64,1.46.98a79.9865,79.9865,0,0,1,9.54,7.66,124.09,124.09,0,0,1,17.35,20.45c.08.11.16.23.24.35,5.1,7.56,10.03,16.12,15.29,25.78l-32.05,24.16q-17.58-39.18-44.45-45.66a51.55,51.55,0,0,0-8.11-1.31,37.712,37.712,0,0,0-16.17,2.05,3.5861,3.5861,0,0,0-.51.2c-.31.1-.61.23-.91.36a1.0887,1.0887,0,0,0-.25.1c-.34.14-.67.28-1,.44-.12.05-.24.11-.36.17-.27.12-.54.26-.81.4-.2.1-.4.2-.6.31-.77.4-1.53.84-2.27,1.31-.42.26-.83.53-1.24.81-.41.27-.82.56-1.22.86Q187.516,108.135,185.621,128.42Z"
            transform="translate(-2.6309 -0.079)"
            fill="#none"
            stroke="#fff"
            strokeMiterlimit="10"
          />
          <path
            className="seg"
            id="blue"
            d="M340.851,103.07l-29.39,10.47c-5.26-9.66-10.19-18.22-15.29-25.78-.08-.12-.16-.24-.24-.35-7.92-11.68-16.25-20.94-26.89-28.11-.48-.34-.97-.66-1.46-.98-.4-.26-.81-.52-1.22-.77a101.8089,101.8089,0,0,0-28.65-11.8,94.7455,94.7455,0,0,0-22.19-2.79c-.79,0-1.58.01-2.37.04-.2,0-.39.01-.58.02-.32.01-.64.02-.95.04-1.15.06-2.3.14-3.43.25-.35.03-.7.07-1.05.11-.32.03-.63.07-.94.11-.41.05-.82.1-1.23.16-.36.05-.71.1-1.07.16-.41.06-.82.13-1.23.2-.15.03-.31.06-.46.08-.38.07-.75.14-1.12.22-.53.1-1.04.21-1.56.33-.41.09-.81.18-1.21.28-.46.11-.92.22-1.38.35-.45.12-.91.24-1.36.37-.58.17-1.16.34-1.73.53-.77.23-1.53.49-2.29.76,23.89-8.72,48.29-19.85,75.53-11.69C305.491,45.23,320.711,66.14,340.851,103.07Z"
            transform="translate(-2.6309 -0.079)"
            fill="none"
            stroke="#fff"
            strokeMiterlimit="10"
          />
          <polygon
            className="seg"
            id="blue"
            points="308.347 114.575 335.311 104.746 305.905 127.423 278.942 137.253 308.347 114.575"
            fill="none"
            stroke="#fff"
            strokeMiterlimit="10"
          />
        </g>
      </svg>
    );
  }
}

function mapStateToProps({ loaded }) {
  console.log("map", loaded);
  return {
    loaded
  };
}

export default connect(mapStateToProps)(Logo);
